spring.application.name=project-tachy

# PostgreSQL Datasource Configuration
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:raven_db}
spring.datasource.username=${POSTGRES_USER:raven_user}
spring.datasource.password=${POSTGRES_PASSWORD:admin}
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway Configuration
# Automatically run migrations on startup from classpath:db/migration
spring.flyway.locations=classpath:db/migration

# Hibernate Configuration
# Validate the schema against the database, don't create or update it.
# Flyway is responsible for managing the schema.
spring.jpa.hibernate.ddl-auto=validate


spring.ai.openai.chat.options.model=qwen-turbo-latest
spring.ai.openai.embedding.options.model=qwen-embedding-v3
# NOTICE : This is a fake configuration for the OpenAI API.
spring.ai.openai.base-url=https://dashscope.aliyuncs.com/compatible-mode
spring.ai.openai.chat.completions-path=/v1/chat/completions
spring.ai.openai.api-key=${OPENAI_API_KEY}

# Pulsar Message Queue Configuration
spring.pulsar.client.service-url=${PULSAR_SERVICE_URL:pulsar://localhost:6650}
spring.pulsar.producer.topic-name=report-tasks
spring.pulsar.consumer.topics=report-tasks
spring.pulsar.consumer.subscription-name=report-tasks-subscription

# Spring AI MCP Client Configuration
spring.ai.mcp.client.enabled=true
spring.ai.mcp.client.name=tachy-mcp-client
spring.ai.mcp.client.version=1.0.0
spring.ai.mcp.client.type=SYNC
spring.ai.mcp.client.request-timeout=30s
spring.ai.mcp.client.root-change-notification=true
spring.ai.mcp.client.toolcallback.enabled=true

# MCP STDIO Transport Configuration (for local MCP servers)
# Example: filesystem server
# spring.ai.mcp.client.stdio.connections.filesystem.command=npx
# spring.ai.mcp.client.stdio.connections.filesystem.args=-y,@modelcontextprotocol/server-filesystem,/tmp

# MCP SSE Transport Configuration (for remote MCP servers)
# Example: remote MCP server
# spring.ai.mcp.client.sse.connections.remote-server.url=http://localhost:8080
# spring.ai.mcp.client.sse.connections.remote-server.sse-endpoint=/sse